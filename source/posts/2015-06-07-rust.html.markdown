---
title: Rust
date: 2015-06-07 15:30 UTC
tags:
---

Rust这门语言在它还是0.4版本的时候就听过，应该是看到一些关于新兴语言的讨论才注意到的。由于当时语言特性还没定下来，也没怎么去看，就当知道有这么一门和Golang同辈的语言。

再之后就是到去年8月份，暑假的时候，在网上瞎溜达，又看到了一篇关于Rust的教程，大致瞄了几眼，此时它还处于0.1x版本，就想着等它1.0正式版的时候，再回来学学。

之所以想学这门语言，有如下原因吧：

* 很多很酷的人说它很酷。

* 想学一门系统编程语言。觉得系统型语言更能接触到计算机的底层，帮助了解计算机的内部，扎实基础（修炼内功），虽然自己比较喜欢web开发方面的内容，但夯实的基础应该能够帮助自己成为更好的开发者。

* 它很新~

基于上述原因，在5月16日Rust 1.0版本发布后，就一直想找机会学学。在写下这篇文章的时候，自己刚刚看了Rust官方提供的book的前两章并跟着写了几个例子，感受如下：

* 安装容易。因为自己是在Linux下安装的，照着官方的命令行安装教程，一条命令就足够了：

```
$ curl -sSf https://static.rust-lang.org/rustup.sh | sh
```

* Cargo很好用。利用Cargo可以很快的新建一个Rust项目，并进行项目的相关配置。这一点和Rails很像，这可能是由于Cargo的作者也具有Ruby的背景吧～

```
$ Cargo new hello --bin
```

* 语法和C有点相似，但仅仅就是看起来像，细节内容方面还是不同的。个人还是比较喜欢这种风格的（还有`do...end`这样的）。

* 符号很多，比较复杂，可能是自己还未深入了解语法细节和，就只跟着写了几行代码的缘故。

上述就是写了几段rust代码的一些感受，都是一些浅显的东西，对于常听说的“所有权”、“并发”等相关概念的内容，虽有接触了解，但毕竟还未深入，等之后学到了再说。总体来说，经过这个小尝试和一些“客观的软文”的介绍，还是对rust这门语言充满兴趣的，期待后续学习。
